{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","useState","Date","today","setToday","isFirstRender","useRef","prevPropsValue","setPrevPropsValue","useEffect","todayUpdate","window","setInterval","console","info","toUTCString","slice","document","addEventListener","event","preventDefault","removeEventListener","clearInterval","current","debug","className","App","state","hasClock","timerId","undefined","this","value","now","toString","getRandomName","setState","React","Component","ReactDOM","render","getElementById"],"mappings":"6NAMaA,EAAyB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACvC,EAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAgBC,kBAAO,GAC7B,EAA4CL,mBAASD,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAkCA,OAhCAC,qBAAU,WACR,IAAMC,EAAcC,OAAOC,aAAY,WACrCR,EAAS,IAAIF,MAEbW,QAAQC,MAAK,IAAIZ,MAAOa,cAAcC,OAAO,IAAK,MACjD,KAMH,OAJAC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,oBAGD,WACLH,SAASI,oBAAoB,eAAe,SAACF,GAC3CA,EAAMC,oBAGRT,OAAOW,cAAcZ,MAEtB,IAEHD,qBAAU,WACJJ,EAAckB,QAChBlB,EAAckB,SAAU,GAM1BV,QAAQW,MAAR,uBAA8BjB,EAA9B,eAAmDP,IACnDQ,EAAkBR,MACjB,CAACA,IAGF,sBAAKyB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGzB,IAGF,YACD,sBAAMyB,UAAU,cAAhB,SACGtB,EAAMY,cAAcC,OAAO,IAAK,SCzClC,IAAMU,EAAb,4MACEC,MAAQ,CACNC,UAAU,EACV5B,UAAW,WAHf,EAME6B,aAA8BC,EANhC,uDAQE,WAA2B,IAAD,OACxBC,KAAKF,QAAUlB,OAAOC,aAAY,WAChC,IAAMZ,EAhBZ,WACE,IAAMgC,EAAQ9B,KAAK+B,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAaMG,GAElB,EAAKC,SAAS,CAAEpC,gBACf,MAEHiB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKgB,SAAS,CAAER,UAAU,OAG5BX,SAASC,iBAAiB,SAAS,WACjC,EAAKkB,SAAS,CAAER,UAAU,SArBhC,kCAyBE,WAA8B,IAAD,OAC3BjB,OAAOW,cAAcS,KAAKF,SAE1BZ,SAASI,oBAAoB,eAAe,SAACF,GAC3CA,EAAMC,iBACN,EAAKgB,SAAS,CAAER,UAAU,OAE5BX,SAASI,oBAAoB,SAAS,WACpC,EAAKe,SAAS,CAAER,UAAU,SAjChC,oBAqCE,WACE,IAAQA,EAAaG,KAAKJ,MAAlBC,SAER,OACE,sBAAKH,UAAU,MAAf,UACE,6CACCG,GAEG,cAAC,EAAD,CAAO5B,UAAW+B,KAAKJ,MAAM3B,mBA7CzC,GAAyBqC,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAvB,SAASwB,eAAe,W","file":"static/js/main.09d19e98.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\nexport const Clock: React.FC<Props> = ({ clockName }) => {\n  const [today, setToday] = useState(new Date());\n  const isFirstRender = useRef(true);\n  const [prevPropsValue, setPrevPropsValue] = useState(clockName);\n\n  useEffect(() => {\n    const todayUpdate = window.setInterval(() => {\n      setToday(new Date());\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    document.addEventListener('contextmenu', (event: MouseEvent): void => {\n      event.preventDefault();\n    });\n\n    return () => {\n      document.removeEventListener('contextmenu', (event: MouseEvent) => {\n        event.preventDefault();\n      });\n\n      window.clearInterval(todayUpdate);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n\n      return;\n    }\n\n    // eslint-disable-next-line no-console\n    console.debug(`Renamed from ${prevPropsValue} to ${clockName}`);\n    setPrevPropsValue(clockName);\n  }, [clockName]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      {' time is '}\n      <span className=\"Clock__time\">\n        {today.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | undefined = undefined;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n    document.removeEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n          && (\n            <Clock clockName={this.state.clockName} />\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}